---
openapi: "3.0.0"
info:
  title: "Generated API"
  version: "1.0.0"
  description: "API dynamically generated from UML."
servers:
- url: "http://localhost:4010"
paths:
  /library:
    get:
      tags:
      - "Library"
      summary: "Get all instances of Library"
      description: "Fetches all instances of Library"
      responses:
        "200":
          content:
            application/json:
              examples:
                exampleArray:
                  value:
                  - id: 1
                    libraryName: "libraryName: \"Wonderland Library\""
                  - id: 2
                    libraryName: "libraryName: \"Bookworm Haven\""
                  - id: 3
                    libraryName: "libraryName: \"Sunset City Public Library\""
                  - id: 4
                    libraryName: "Library with id 4 libraryName value: \"Lighthouse\
                      \ Library\""
                  - id: 5
                    libraryName: "The unique example value for the String attribute\
                      \ libraryName for a Library with id 5 could be \"Sunshine Public\
                      \ Library\"."
                  - id: 6
                    libraryName: "Library 6: \"Wonderland Public Library\""
                  - id: 7
                    libraryName: "libraryName: \"Sunflower Reading Paradise\""
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Library"
            application/xml:
              examples:
                exampleArray:
                  value:
                  - id: 1
                    libraryName: "libraryName: \"Wonderland Library\""
                  - id: 2
                    libraryName: "libraryName: \"Bookworm Haven\""
                  - id: 3
                    libraryName: "libraryName: \"Sunset City Public Library\""
                  - id: 4
                    libraryName: "Library with id 4 libraryName value: \"Lighthouse\
                      \ Library\""
                  - id: 5
                    libraryName: "The unique example value for the String attribute\
                      \ libraryName for a Library with id 5 could be \"Sunshine Public\
                      \ Library\"."
                  - id: 6
                    libraryName: "Library 6: \"Wonderland Public Library\""
                  - id: 7
                    libraryName: "libraryName: \"Sunflower Reading Paradise\""
              schema:
                items:
                  $ref: "#/components/schemas/Library"
                type: "array"
                xml:
                  wrapped: true
                  namespace: "http://example.com/schema"
                  name: "library"
          description: "Successful retrieval"
    post:
      tags:
      - "Library"
      summary: "POST operation for Library"
      description: "Performs POST operation for Library"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Library"
          application/xml:
            schema:
              $ref: "#/components/schemas/Library"
          application/json:
            schema:
              $ref: "#/components/schemas/Library"
        description: "Payload for POST operation"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Library"
            application/xml:
              schema:
                $ref: "#/components/schemas/Library"
          description: "Successful operation"
  /library/{id}:
    delete:
      tags:
      - "Library"
      summary: "DELETE operation for Library"
      description: "Performs DELETE operation for Library"
      parameters:
      - name: "id"
        schema:
          type: "string"
        required: true
        in: "path"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Library"
            application/xml:
              schema:
                $ref: "#/components/schemas/Library"
          description: "Successful operation"
    get:
      tags:
      - "Library"
      summary: "GET operation for Library"
      description: "Performs GET operation for Library"
      parameters:
      - name: "id"
        schema:
          type: "string"
        required: true
        in: "path"
      responses:
        "200":
          content:
            application/json:
              examples:
                "1":
                  value:
                    id: 1
                    libraryName: "libraryName: \"Wonderland Library\""
                "2":
                  value:
                    id: 2
                    libraryName: "libraryName: \"Bookworm Haven\""
                "3":
                  value:
                    id: 3
                    libraryName: "libraryName: \"Sunset City Public Library\""
                "4":
                  value:
                    id: 4
                    libraryName: "Library with id 4 libraryName value: \"Lighthouse\
                      \ Library\""
                "5":
                  value:
                    id: 5
                    libraryName: "The unique example value for the String attribute\
                      \ libraryName for a Library with id 5 could be \"Sunshine Public\
                      \ Library\"."
                "6":
                  value:
                    id: 6
                    libraryName: "Library 6: \"Wonderland Public Library\""
                "7":
                  value:
                    id: 7
                    libraryName: "libraryName: \"Sunflower Reading Paradise\""
              schema:
                $ref: "#/components/schemas/Library"
            application/xml:
              examples:
                "1":
                  value:
                    id: 1
                    libraryName: "libraryName: \"Wonderland Library\""
                "2":
                  value:
                    id: 2
                    libraryName: "libraryName: \"Bookworm Haven\""
                "3":
                  value:
                    id: 3
                    libraryName: "libraryName: \"Sunset City Public Library\""
                "4":
                  value:
                    id: 4
                    libraryName: "Library with id 4 libraryName value: \"Lighthouse\
                      \ Library\""
                "5":
                  value:
                    id: 5
                    libraryName: "The unique example value for the String attribute\
                      \ libraryName for a Library with id 5 could be \"Sunshine Public\
                      \ Library\"."
                "6":
                  value:
                    id: 6
                    libraryName: "Library 6: \"Wonderland Public Library\""
                "7":
                  value:
                    id: 7
                    libraryName: "libraryName: \"Sunflower Reading Paradise\""
              schema:
                $ref: "#/components/schemas/Library"
          description: "Successful operation"
    put:
      tags:
      - "Library"
      summary: "PUT operation for Library"
      description: "Performs PUT operation for Library"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Library"
          application/xml:
            schema:
              $ref: "#/components/schemas/Library"
          application/json:
            schema:
              $ref: "#/components/schemas/Library"
        description: "Payload for PUT operation"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Library"
            application/xml:
              schema:
                $ref: "#/components/schemas/Library"
          description: "Successful operation"
  /bike:
    get:
      tags:
      - "Bike"
      summary: "Get all instances of Bike"
      description: "Fetches all instances of Bike"
      responses:
        "200":
          content:
            application/json:
              examples:
                exampleArray:
                  value:
                  - id: 1
                    bikeType: "\"mountain\""
                  - id: 2
                    bikeType: "\"BMX\""
                  - id: 3
                    bikeType: "mountain bike"
                  - id: 4
                    bikeType: "Mountain Bike - 4"
                  - id: 5
                    bikeType: "Mountain Bike"
                  - id: 6
                    bikeType: "\"mountain\""
                  - id: 7
                    bikeType: "mountain bike"
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Bike"
            application/xml:
              examples:
                exampleArray:
                  value:
                  - id: 1
                    bikeType: "\"mountain\""
                  - id: 2
                    bikeType: "\"BMX\""
                  - id: 3
                    bikeType: "mountain bike"
                  - id: 4
                    bikeType: "Mountain Bike - 4"
                  - id: 5
                    bikeType: "Mountain Bike"
                  - id: 6
                    bikeType: "\"mountain\""
                  - id: 7
                    bikeType: "mountain bike"
              schema:
                items:
                  $ref: "#/components/schemas/Bike"
                type: "array"
                xml:
                  wrapped: true
                  namespace: "http://example.com/schema"
                  name: "bike"
          description: "Successful retrieval"
    post:
      tags:
      - "Bike"
      summary: "POST operation for Bike"
      description: "Performs POST operation for Bike"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Bike"
          application/xml:
            schema:
              $ref: "#/components/schemas/Bike"
          application/json:
            schema:
              $ref: "#/components/schemas/Bike"
        description: "Payload for POST operation"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bike"
            application/xml:
              schema:
                $ref: "#/components/schemas/Bike"
          description: "Successful operation"
  /bike/{id}:
    delete:
      tags:
      - "Bike"
      summary: "DELETE operation for Bike"
      description: "Performs DELETE operation for Bike"
      parameters:
      - name: "id"
        schema:
          type: "string"
        required: true
        in: "path"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bike"
            application/xml:
              schema:
                $ref: "#/components/schemas/Bike"
          description: "Successful operation"
    get:
      tags:
      - "Bike"
      summary: "GET operation for Bike"
      description: "Performs GET operation for Bike"
      parameters:
      - name: "id"
        schema:
          type: "string"
        required: true
        in: "path"
      responses:
        "200":
          content:
            application/json:
              examples:
                "1":
                  value:
                    id: 1
                    bikeType: "\"mountain\""
                "2":
                  value:
                    id: 2
                    bikeType: "\"BMX\""
                "3":
                  value:
                    id: 3
                    bikeType: "mountain bike"
                "4":
                  value:
                    id: 4
                    bikeType: "Mountain Bike - 4"
                "5":
                  value:
                    id: 5
                    bikeType: "Mountain Bike"
                "6":
                  value:
                    id: 6
                    bikeType: "\"mountain\""
                "7":
                  value:
                    id: 7
                    bikeType: "mountain bike"
              schema:
                $ref: "#/components/schemas/Bike"
            application/xml:
              examples:
                "1":
                  value:
                    id: 1
                    bikeType: "\"mountain\""
                "2":
                  value:
                    id: 2
                    bikeType: "\"BMX\""
                "3":
                  value:
                    id: 3
                    bikeType: "mountain bike"
                "4":
                  value:
                    id: 4
                    bikeType: "Mountain Bike - 4"
                "5":
                  value:
                    id: 5
                    bikeType: "Mountain Bike"
                "6":
                  value:
                    id: 6
                    bikeType: "\"mountain\""
                "7":
                  value:
                    id: 7
                    bikeType: "mountain bike"
              schema:
                $ref: "#/components/schemas/Bike"
          description: "Successful operation"
    put:
      tags:
      - "Bike"
      summary: "PUT operation for Bike"
      description: "Performs PUT operation for Bike"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Bike"
          application/xml:
            schema:
              $ref: "#/components/schemas/Bike"
          application/json:
            schema:
              $ref: "#/components/schemas/Bike"
        description: "Payload for PUT operation"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bike"
            application/xml:
              schema:
                $ref: "#/components/schemas/Bike"
          description: "Successful operation"
components:
  schemas:
    Library:
      xml:
        wrapped: true
        namespace: "http://example.com/schema"
        name: "library"
      example:
        id: 1
        libraryName: "libraryName: \"Wonderland Library\""
      examples:
        exampleArray:
        - id: 1
          libraryName: "libraryName: \"Wonderland Library\""
        - id: 2
          libraryName: "libraryName: \"Bookworm Haven\""
        - id: 3
          libraryName: "libraryName: \"Sunset City Public Library\""
        - id: 4
          libraryName: "Library with id 4 libraryName value: \"Lighthouse Library\""
        - id: 5
          libraryName: "The unique example value for the String attribute libraryName\
            \ for a Library with id 5 could be \"Sunshine Public Library\"."
        - id: 6
          libraryName: "Library 6: \"Wonderland Public Library\""
        - id: 7
          libraryName: "libraryName: \"Sunflower Reading Paradise\""
      properties:
        libraryName:
          type: "string"
      type: "object"
    Bike:
      xml:
        wrapped: true
        namespace: "http://example.com/schema"
        name: "bike"
      example:
        id: 1
        bikeType: "\"mountain\""
      examples:
        exampleArray:
        - id: 1
          bikeType: "\"mountain\""
        - id: 2
          bikeType: "\"BMX\""
        - id: 3
          bikeType: "mountain bike"
        - id: 4
          bikeType: "Mountain Bike - 4"
        - id: 5
          bikeType: "Mountain Bike"
        - id: 6
          bikeType: "\"mountain\""
        - id: 7
          bikeType: "mountain bike"
      properties:
        bikeType:
          type: "string"
      type: "object"
